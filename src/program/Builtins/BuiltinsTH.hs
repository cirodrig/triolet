
{-# LANGUAGE TemplateHaskell #-}
module Builtins.BuiltinsTH where
       
import Language.Haskell.TH(Strict(..))
import Common.THRecord
import Common.Label
import Type.Var

pyonBuiltinTypeNames =
  [ "bool"
  , "int"
  , "float"
  , "Complex"
  , "list"
  , "matrix"
  , "ListView"
  , "MatrixView"
  , "NoneType"
  , "Any"
  , "PyonTuple0"
  , "PyonTuple1"
  , "PyonTuple2"
  , "PyonTuple3"
  , "PyonTuple4"
  , "Stream"
  , "LinStream"
  , "MatrixStream"
  , "StreamNext"
  , "FinIndInt"
  , "IndInt"
  , "SomeIndInt"
  , "array"
  , "EffTok"
  , "Pf"
  , "BindState"
  , "ListShapeEliminator"
  , "MatrixShapeEliminator"

    -- Representation coercions
  , "Stored"
  , "StoredBox"
  , "Boxed"
  , "Referenced"
  , "OutPtr"
  , "IEffect"
  , "Writer"
  , "BoxedType"
  , "BareType"
    
    -- Shape-related types
  , "shape"
  , "list_shape"
  , "array_shape"
  , "unit_shape"
  , "matrix_shape"

    -- Integer type indices
  , "plus_i"
  , "minus_i"
  , "min_i"
    
    -- Propositions
  , "eqZ"
  , "neZ"
  , "trueP"

    -- Dictionary types
  , "Repr"
  , "TraversableDict"
  , "ShapeDict"
  , "IndexableDict"
  , "Indexable2Dict"
  , "EqDict"
  , "OrdDict"
  , "AdditiveDict"
  , "MultiplicativeDict"
  , "RemainderDict"
  , "FractionalDict"
  , "FloatingDict"
  , "VectorDict"
  ]

pyonBuiltinVariableNames =
  [ -- Data constructors
    "True"
  , "False"
  , "None"
  , "complex"
  , "pyonTuple0"
  , "pyonTuple1"
  , "pyonTuple2"
  , "pyonTuple3"
  , "pyonTuple4"
  , "stored"
  , "storedBox"
  , "boxed"
  , "referenced"
  , "finIndInt"
  , "indInt"
  , "indOmega"
  , "someIndInt"
  , "linStream"
  , "matrixStream"
  , "streamEmpty"
  , "streamValue"
  , "make_list"
  , "make_matrix"
  , "listView"
  , "matrixView"
  , "effTok"
  , "pf"
  , "bindFromSource"
  , "bindFromTrans"
  , "listShapeEliminator"
  , "matrixShapeEliminator"

    -- Class constructors
  , "repr"
  , "traversableDict"
  , "shapeDict"
  , "indexableDict"
  , "indexable2Dict"
  , "eqDict"
  , "ordDict"
  , "additiveDict"
  , "multiplicativeDict"
  , "remainderDict"
  , "fractionalDict"
  , "floatingDict"
  , "vectorDict"

    -- Class instances
  , "repr_bool"
  , "repr_int"
  , "repr_float"
  , "repr_Complex"
  , "repr_list"
  , "repr_matrix"
  , "repr_ListView"
  , "repr_MatrixView"
  , "repr_NoneType"
  , "repr_Any"
  , "repr_StoredBox"
  , "repr_Box"
  , "repr_Stream"
  , "repr_Referenced"
  , "repr_EmptyReference"
  , "repr_array"
  , "repr_EffTok"
  , "repr_PyonTuple0"
  , "repr_PyonTuple1"
  , "repr_PyonTuple2"
  , "repr_PyonTuple3"
  , "repr_PyonTuple4"
  , "TraversableDict_Stream_traverse"
  , "TraversableDict_Stream_build"
  , "TraversableDict_list_traverse"
  , "TraversableDict_list_build"
  , "TraversableDict_matrix_traverse"
  , "TraversableDict_matrix_build"
  , "TraversableDict_ListView_traverse"
  , "TraversableDict_ListView_build"
  , "TraversableDict_MatrixView_traverse"
  , "TraversableDict_MatrixView_build"
  , "ShapeDict_list_flatten"
  , "ShapeDict_list_map"
  , "ShapeDict_list_zipWith"
  , "ShapeDict_list_zipWith3"
  , "ShapeDict_list_zipWith4"
  , "ShapeDict_matrix_flatten"
  , "ShapeDict_matrix_map"
  , "ShapeDict_matrix_zipWith"
  , "ShapeDict_matrix_zipWith3"
  , "ShapeDict_matrix_zipWith4"
  , "ShapeDict_Stream_flatten"
  , "ShapeDict_Stream_map"
  , "ShapeDict_Stream_zipWith"
  , "ShapeDict_Stream_zipWith3"
  , "ShapeDict_Stream_zipWith4"
  , "IndexableDict_list_len"
  , "IndexableDict_list_at_point"
  , "IndexableDict_list_at_slice"
  , "IndexableDict_list_with_shape"
  , "IndexableDict_ListView_len"
  , "IndexableDict_ListView_at_point"
  , "IndexableDict_ListView_at_slice"
  , "IndexableDict_ListView_with_shape"
  , "Indexable2Dict_matrix_at_point2"
  , "Indexable2Dict_matrix_at_slice2"
  , "Indexable2Dict_matrix_with_shape2"
  , "Indexable2Dict_MatrixView_at_point2"
  , "Indexable2Dict_MatrixView_at_slice2"
  , "Indexable2Dict_MatrixView_with_shape2"
  , "EqDict_int"
  , "EqDict_int_eq"
  , "EqDict_int_ne"
  , "EqDict_float"
  , "EqDict_float_eq"
  , "EqDict_float_ne"
  , "EqDict_Tuple2"
  , "EqDict_Tuple2_eq"
  , "EqDict_Tuple2_ne"
  , "OrdDict_int"
  , "OrdDict_int_lt"
  , "OrdDict_int_le"
  , "OrdDict_int_gt"
  , "OrdDict_int_ge"
  , "OrdDict_float"
  , "OrdDict_float_lt"
  , "OrdDict_float_le"
  , "OrdDict_float_gt"
  , "OrdDict_float_ge"
  , "OrdDict_Tuple2"
  , "OrdDict_Tuple2_lt"
  , "OrdDict_Tuple2_le"
  , "OrdDict_Tuple2_gt"
  , "OrdDict_Tuple2_ge"
  , "AdditiveDict_int"
  , "AdditiveDict_int_add"
  , "AdditiveDict_int_sub"
  , "AdditiveDict_int_negate"
  , "AdditiveDict_int_zero"
  , "AdditiveDict_float"
  , "AdditiveDict_float_add"
  , "AdditiveDict_float_sub"
  , "AdditiveDict_float_negate"
  , "AdditiveDict_float_zero"
  , "AdditiveDict_Complex_add"
  , "AdditiveDict_Complex_sub"
  , "AdditiveDict_Complex_negate"
  , "AdditiveDict_Complex_zero"
  , "MultiplicativeDict_int"
  , "MultiplicativeDict_int_mul"
  , "MultiplicativeDict_int_fromInt"
  , "MultiplicativeDict_int_one"
  , "MultiplicativeDict_float"
  , "MultiplicativeDict_float_mul"
  , "MultiplicativeDict_float_fromInt"
  , "MultiplicativeDict_float_one"
  , "MultiplicativeDict_Complex_mul"
  , "MultiplicativeDict_Complex_fromInt"
  , "MultiplicativeDict_Complex_one"
  , "RemainderDict_int_floordiv"
  , "RemainderDict_int_mod"
  , "RemainderDict_float_floordiv"
  , "RemainderDict_float_mod"
  , "FractionalDict_float_div"
  , "FractionalDict_Complex_div"
  , "FloatingDict_float_fromfloat"
  , "FloatingDict_float_power"
  , "FloatingDict_float_exp"
  , "FloatingDict_float_log"
  , "FloatingDict_float_sqrt"
  , "FloatingDict_float_sin"
  , "FloatingDict_float_cos"
  , "FloatingDict_float_tan"
  , "FloatingDict_float_pi"
  , "FloatingDict_Complex_fromfloat"
  , "FloatingDict_Complex_power"
  , "FloatingDict_Complex_exp"
  , "FloatingDict_Complex_log"
  , "FloatingDict_Complex_sqrt"
  , "FloatingDict_Complex_sin"
  , "FloatingDict_Complex_cos"
  , "FloatingDict_Complex_tan"
  , "FloatingDict_Complex_pi"
  , "VectorDict_float_scale"
  , "VectorDict_float_magnitude"
  , "VectorDict_float_dot"
  , "VectorDict_Complex_scale"
  , "VectorDict_Complex_magnitude"
  , "VectorDict_Complex_dot"

    -- Integer index arithmetic 
  , "zero_ii"
  , "one_ii"
  , "plus_ii"
  , "minus_ii"
  , "min_ii"
  , "eqZ_refl"
  , "deadProof"

    -- Built-in functions
  , "floor"
  , "min_int"
  , "max_int"
  , "or"
  , "and"
  , "oper_DO"
  , "return"
  , "oper_GUARD"
  , "oper_CAT_MAP"
  , "bind"
  , "chunk"
  , "oper_EMPTY"
  , "oper_BITWISEAND"
  , "oper_BITWISEOR"
  , "oper_BITWISEXOR"
  , "fun_undefined"
  , "fun_map"
  , "fun_reduce"
  , "fun_reduce1"
  , "fun_zip"
  , "fun_zip3"
  , "fun_zip4"
  , "count"
  , "range"
  , "len"
  , "safeIndex"
  , "safeSlice"
  , "width"
  , "height"
  , "safeIndex2"
  , "safeSlice2"
  , "histogram"
  , "makeComplex"
  , "rows"
  , "cols"
  , "outerproduct"
  , "transpose"
  , "stencil2D"
    
    -- Inserted by stream specialization
  , "chunk_id"
  , "LinStream_fold"
  , "LinStream_reduce"
  , "LinStream_reduce1"
  , "LinStream_flatten"
  , "LinStream_map"
  , "LinStream_zipWith"
  , "LinStream_zipWith3"
  , "LinStream_zipWith4"
  , "LinStream_zipWith_array"
  , "LinStream_zipWith3_array"
  , "LinStream_zipWith4_array"
  , "fun_fold_Stream"
  , "fun_map_Stream"
  , "fun_reduce_Stream"
  , "fun_reduce1_Stream"
  , "fun_zip_Stream"
  , "fun_zip3_Stream"
  , "fun_zip4_Stream"
  , "fun_asList_Stream"
  , "fun_asMatrix_Stream"
  , "fun_from_MatrixView_Stream"
  , "fun_asArray2_Stream"
  , "histogramArray"
    
    -- Inserted by representation inference
  , "copy"
  , "convertToBoxed"
  , "convertToBare"
    
    -- Inserted by argument flattening
  , "deadBox"
  , "deadRef"
  
    -- Inserted by rewrite rules
  , "array_build"
  , "array_traverse"
  , "defineIntIndex"
  , "rangeIndexed"
  , "generate"
  , "generate_forever"
  , "subscript"
  , "subscript_out"
  , "doall"
  , "for"
  , "blocked_reduce"
  , "blocked_reduce1"
  , "blocked_doall"
  , "createHistogram"
  , "emptyEffTok"
  , "toEffTok"
  , "seqEffTok"
  , "fromEffTok"
  ]

pyonBuiltinsSpecification =
  recordDef "PyonBuiltins" variables
  where
    variables =
      [('_' : n, IsStrict, [t| Var |])
      | n <- pyonBuiltinTypeNames ++ pyonBuiltinVariableNames]

