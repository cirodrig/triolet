
{-# LANGUAGE TemplateHaskell #-}
module Pyon.Anf.BuiltinsTH where

import Language.Haskell.TH(Strict(..))
import Gluon.Common.Label
import Gluon.Common.THRecord
import Gluon.Core.Syntax

anfBuiltinModuleNameString = "AnfBuiltin"
anfBuiltinModuleName = moduleName anfBuiltinModuleNameString

builtinTypeNames =
  [ "Ptr"
  , "Action"
    -- Dictionary types
  , "EqDict"
  , "OrdDict"
  , "AdditiveDict"
  , "PassConv"
    -- Object types
  , "NoneTypeO"
  , "AnyO"
  , "boolO"
  , "intO"
  , "floatO"
  , "listO"
  , "StreamO"
  , "Undef"
  , "PyonTuple0O"
  , "PyonTuple1O"
  , "PyonTuple2O"
  ]

builtinDataConNames =
  [ "TrueV"
  , "FalseV"
  , "NoneV"
  , "eqDict"
  , "ordDict"
  , "additiveDict"
  ]

builtinFunctionNames =
  [ -- Generated by effect inference 
    "copy"
  , "reading"
  , "local"
    -- Literal store functions
  , "store_int"
  , "store_float"
  , "store_bool"
  , "store_NoneType"
    -- Introduction functions
  , "intro_PyonTuple2"
    -- Elimination functions
  , "elim_bool"
  , "elim_PyonTuple2"
    -- Parameter passing
  , "passConv_int"
  , "passConv_float"
  , "passConv_bool"
  , "passConv_PyonTuple2"
    -- Dictionary functions
  , "Eq_EQ_int"
  , "Eq_NE_int"
  , "Eq_EQ_float"
  , "Eq_NE_float"
  , "Ord_GT_int"
  , "Ord_LT_int"
  , "Ord_GE_int"
  , "Ord_LE_int"
  , "Ord_GT_float"
  , "Ord_LT_float"
  , "Ord_GE_float"
  , "Ord_LE_float"
  , "Additive_ZERO_int"
  , "Additive_ADD_int"    
  , "Additive_SUB_int"
  , "Additive_ZERO_float"
  , "Additive_ADD_float"
  , "Additive_SUB_float"
    -- Global functions
  , "oper_DIV"
  , "oper_MOD"
  , "oper_FLOORDIV"
  , "oper_POWER"
  , "oper_NEGATE"
  , "oper_BITWISEAND"
  , "oper_BITWISEOR"
  , "oper_BITWISEXOR"
  ]

anfBuiltinConstructors =
  builtinTypeNames ++ builtinDataConNames ++ builtinFunctionNames

anfBuiltinConstructorNames = map ('_':) anfBuiltinConstructors

anfBuiltinsSpecification =
  recordDef "AnfBuiltins" constructors
  where
    constructors =
      map (\n -> (n, IsStrict, [t| Con |])) anfBuiltinConstructorNames
