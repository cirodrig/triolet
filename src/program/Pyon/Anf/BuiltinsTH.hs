
{-# LANGUAGE TemplateHaskell #-}
module Pyon.Anf.BuiltinsTH where

import Language.Haskell.TH(Strict(..))
import Gluon.Common.Label
import Gluon.Common.THRecord
import Gluon.Core.Syntax

anfBuiltinModuleNameString = "AnfBuiltin"
anfBuiltinModuleName = moduleName anfBuiltinModuleNameString

builtinTypeNames =
  [ "Ptr"
  , "Undef"
  , "Action"
  ]

builtinFunctionNames =
  [ -- Generated by effect inference 
    "copy"
  , "reading"
  , "local"
    -- Elimination functions
  , "elim_bool"
  , "elim_PyonTuple2"
    -- Parameter passing
  , "PassConv_int"
  , "PassConv_float"
  , "PassConv_PyonTuple2"
    -- Literal store functions
  , "store_int"
  , "store_float"
  , "store_bool"
  , "store_NoneType"
  ]

anfBuiltinConstructors = builtinTypeNames ++ builtinFunctionNames

anfBuiltinConstructorNames = map ('_':) anfBuiltinConstructors

anfBuiltinsSpecification =
  recordDef "AnfBuiltins" constructors
  where
    constructors =
      map (\n -> (n, IsStrict, [t| Con |])) anfBuiltinConstructorNames
