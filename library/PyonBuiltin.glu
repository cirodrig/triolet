
constant Action : Pure -> Pure;
constant Stream : Pure -> Pure;

-- Pyon types.  We don't care about values for now.
constant NoneType : Pure;
constant Any : Pure;
constant bool : Pure;
constant list : Pure -> Pure;

constant PyonTuple0 : Pure;
constant PyonTuple1 : Pure -> Pure;
constant PyonTuple2 : Pure -> Pure -> Pure;
constant PyonTuple3 : Pure -> Pure -> Pure -> Pure;
constant PyonTuple4 : Pure -> Pure -> Pure -> Pure -> Pure;
constant PyonTuple5 : Pure -> Pure -> Pure -> Pure -> Pure -> Pure;

-- Dictionary types for Pyon classes.
constant EqDict : Pure -> Pure;
constant OrdDict : Pure -> Pure;
constant TraversableDict : Pure -> Pure;

-- Class dictionary members for predefined instances.

constant Eq_EQ_Int : Int -> Int -> Action bool;
constant Eq_NE_Int : Int -> Int -> Action bool;
constant Ord_GT_Int : Int -> Int -> Action bool;
constant Ord_GE_Int : Int -> Int -> Action bool;
constant Ord_LT_Int : Int -> Int -> Action bool;
constant Ord_LE_Int : Int -> Int -> Action bool;

constant Eq_EQ_Float : Float -> Float -> Action bool;
constant Eq_NE_Float : Float -> Float -> Action bool;
constant Ord_GT_Float : Float -> Float -> Action bool;
constant Ord_GE_Float : Float -> Float -> Action bool;
constant Ord_LT_Float : Float -> Float -> Action bool;
constant Ord_LE_Float : Float -> Float -> Action bool;

constant Eq_EQ_Tuple2 : (a : Pure) -> (b : Pure)
                     -> EqDict a -> EqDict b
                     -> Action ((PyonTuple2 a b) -> (PyonTuple2 a b) -> Action bool);
constant Eq_NE_Tuple2 : (a : Pure) -> (b : Pure)
                     -> EqDict a -> EqDict b
                     -> Action ((PyonTuple2 a b) -> (PyonTuple2 a b) -> Action bool);
constant Ord_GT_Tuple2 : (a : Pure) -> (b : Pure)
                      -> OrdDict a -> OrdDict b
                      -> Action ((PyonTuple2 a b) -> (PyonTuple2 a b) -> Action bool);
constant Ord_GE_Tuple2 : (a : Pure) -> (b : Pure)
                      -> OrdDict a -> OrdDict b
                      -> Action ((PyonTuple2 a b) -> (PyonTuple2 a b) -> Action bool);
constant Ord_LT_Tuple2 : (a : Pure) -> (b : Pure)
                      -> OrdDict a -> OrdDict b
                      -> Action ((PyonTuple2 a b) -> (PyonTuple2 a b) -> Action bool);
constant Ord_LE_Tuple2 : (a : Pure) -> (b : Pure)
                      -> OrdDict a -> OrdDict b
                      -> Action ((PyonTuple2 a b) -> (PyonTuple2 a b) -> Action bool);

constant Traversable_TRAVERSE_Stream : (a : Pure) -> Stream a -> Stream a;
constant Traversable_TRAVERSE_list : (a : Pure) -> list a -> Stream a;

-- Builtin functions
constant oper_ADD : (a : Pure) -> a -> a -> Action a;
constant oper_SUB : (a : Pure) -> a -> a -> Action a;
constant oper_MUL : (a : Pure) -> a -> a -> Action a;
constant oper_DIV : (a : Pure) -> a -> a -> Action a;
constant oper_MOD : Int -> Int -> Action Int;
constant oper_POWER : (a : Pure) -> a -> a -> Action a;
constant oper_FLOORDIV : (a : Pure) -> a -> a -> Action a;
constant oper_BITWISEAND : Int -> Int -> Action Int;
constant oper_BITWISEOR : Int -> Int -> Action Int;
constant oper_BITWISEXOR : Int -> Int -> Action Int;
constant oper_NEGATE : (a : Pure) -> a -> Action a;

constant oper_CAT_MAP : (a : Pure) -> (b : Pure)
                     -> (a -> Stream b) -> Stream a -> Stream b;

constant oper_GUARD : (a : Pure) -> bool -> Stream a -> Stream a;

constant oper_DO : (a : Pure) -> a -> Stream a;

constant fun_makelist : (t : Pure -> Pure) -> (a : Pure)
                     -> TraversableDict t
                     -> Action (t a -> Action (list a));

constant fun_map : (t : Pure -> Pure) -> (a : Pure) -> (b : Pure)
                -> TraversableDict t
                -> Action ((a -> Action b) -> t a -> Action (t b));

constant fun_reduce : (t : Pure -> Pure) -> (a : Pure)
                   -> TraversableDict t
                   -> Action ((a -> a -> Action a) -> a -> t a -> Action a);

constant fun_reduce1 : (t : Pure -> Pure) -> (a : Pure)
                    -> TraversableDict t
                    -> Action ((a -> a -> Action a) -> t a -> Action a);

constant fun_zip : (s : Pure -> Pure)
                -> (t : Pure -> Pure)
                -> (a : Pure)
                -> (b : Pure)
                -> TraversableDict s
                -> TraversableDict t
                -> Action (s a -> t b -> Stream (PyonTuple2 a b));

constant fun_iota : Stream Int;

constant fun_undefined : (a : Pure) -> Action a;